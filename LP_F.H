#ifndef _LP_F_H_
#define _LP_F_H_ "$Id: LP_F.H,v 1.1 1997-07-08 23:08:04 vince Exp $"

#include <REAL.H>

#if	defined(BL_LANG_FORT)

#if (BL_SPACEDIM == 2)
#define FORT_GSRB      gsrb2dsim
#define FORT_CGPRECND  cgprecnd2dsim
#define FORT_ADOTX adotx2dsim
#endif

#if (BL_SPACEDIM == 3)
#define FORT_GSRB      gsrb3dsim
#define FORT_CGPRECND  cgprecnd3dsim
#define FORT_ADOTX adotx3dsim
#endif

#endif

#if	defined(BL_LANG_CC)

#if (BL_SPACEDIM == 2)
#ifdef BL_FORT_USE_UPPERCASE
#define FORT_GSRB      GSRB2DSIM
#define FORT_CGPRECND  CGPRECND2DSIM
#define FORT_ADOTX ADOTX2DSIM
#endif
#ifdef BL_FORT_USE_UNDERSCORE
#define FORT_GSRB      gsrb2dsim_
#define FORT_CGPRECND  cgprecnd2dsim_
#define FORT_ADOTX adotx2dsim_
#endif
#endif

#if (BL_SPACEDIM == 3)
#ifdef BL_FORT_USE_UPPERCASE
#define FORT_GSRB      GSRB3DSIM
#define FORT_CGPRECND  CGPRECND3DSIM
#define FORT_ADOTX ADOTX3DSIM
#endif
#ifdef BL_FORT_USE_UNDERSCORE
#define FORT_GSRB      gsrb3dsim_
#define FORT_CGPRECND  cgprecnd3dsim_
#define FORT_ADOTX adotx3dsim_
#endif

#endif

#include <ArrayLim.H>

extern "C"
{
#if (BL_SPACEDIM == 2)
    void FORT_GSRB (
	REAL* phi       , ARLIM_P(phi_lo),  ARLIM_P(phi_hi),
	const REAL* rhs , ARLIM_P(rhs_lo),  ARLIM_P(rhs_hi),
	const REAL* den0, ARLIM_P(den0_lo), ARLIM_P(den0_hi),
	const int* m0   , ARLIM_P(m0_lo),   ARLIM_P(m0_hi),
	const REAL* den1, ARLIM_P(den1_lo), ARLIM_P(den1_hi),
	const int* m1   , ARLIM_P(m1_lo),   ARLIM_P(m1_hi),
	const REAL* den2, ARLIM_P(den2_lo), ARLIM_P(den2_hi),
	const int* m2   , ARLIM_P(m2_lo),   ARLIM_P(m2_hi),
	const REAL* den3, ARLIM_P(den3_lo), ARLIM_P(den3_hi),
	const int* m3   , ARLIM_P(m3_lo),   ARLIM_P(m3_hi),
	const int* lo, const int* hi, const int *nc,
	const REAL *h, const  int* redblack
	);
#endif
#if (BL_SPACEDIM == 3)
    void FORT_GSRB (
	REAL* phi       , ARLIM_P(phi_lo),  ARLIM_P(phi_hi),
	const REAL* rhs , ARLIM_P(rhs_lo),  ARLIM_P(rhs_hi),
	const REAL* den0, ARLIM_P(den0_lo), ARLIM_P(den0_hi),
	const int* m0   , ARLIM_P(m0_lo),   ARLIM_P(m0_hi),
	const REAL* den1, ARLIM_P(den1_lo), ARLIM_P(den1_hi),
	const int* m1   , ARLIM_P(m1_lo),   ARLIM_P(m1_hi),
	const REAL* den2, ARLIM_P(den2_lo), ARLIM_P(den2_hi),
	const int* m2   , ARLIM_P(m2_lo),   ARLIM_P(m2_hi),
	const REAL* den3, ARLIM_P(den3_lo), ARLIM_P(den3_hi),
	const int* m3   , ARLIM_P(m3_lo),   ARLIM_P(m3_hi),
	const REAL* den4, ARLIM_P(den4),    ARLIM_P(den4_hi),
	const int* m4   , ARLIM_P(m4),      ARLIM_P(m4_hi),
	const REAL* den5, ARLIM_P(den5),    ARLIM_P(den5_hi),
	const int* m5   , ARLIM_P(m5),      ARLIM_P(m5_hi),
	const int* lo, const int* hi, const int *nc,
	const REAL *h, const  int* redblack
	);
#endif

    void FORT_CGPRECND(
	REAL *tmpz,       ARLIM_P(tmpz_lo), ARLIM_P(tmzr_hi),
	REAL *rho,
	const REAL *tmpr, ARLIM_P(tmpr_lo), ARLIM_P(tmpr_hi),
	const int *lo, const int *hi, const int *nc,
	const REAL *h
	);

    void FORT_ADOTX(
	REAL *y,       ARLIM_P(y_lo), ARLIM_P(y_hi),
	const REAL *x, ARLIM_P(x_lo), ARLIM_P(x_hi),
	const int *lo, const int *hi, const int *nc,
	const REAL *h
	);
}
#endif

#endif
