
Done for first pass, but for later:
A. NavierStokesBase
   - Sync funcitons
   - Get sums update from cache.

B. GODUNOV
   - look at all the add/sum routines to see if Multifab/BaseFab routines could be used instead
   - I did not update BDS. I don't think it will work with my tiling updates.

c. Diffusion.cpp
   - Tensor op called if visc coef=0? Dont think so b/c is_diffusive == 0



My questions:
   1. Does IAMR require boxes to be properly nested?
   2. See note in code here:  FIXED - MSD 7/17/18
      NavierStokesBase.cpp:4314:// FillPatchIterator fpi(parent->getLevel(lev), S_new, 
      NavierStokesBase.cpp:4321:// for (MFIter mfi(tmf); mfi.isValid(); ++mfi)


MFIters not tiled (7/7/18): 


A. Straight forward updates:
   MacOperator.cpp:106:    for (MFIter rhomfi(rho); rhomfi.isValid(); ++rhomfi)
   MacOperator.cpp:173:    for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   MacOperator.cpp:296:    for (MFIter Phimfi(Phi); Phimfi.isValid(); ++Phimfi)
   MacOperator.cpp:319:    for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)

   MacProj.cpp:535:            for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   MacProj.cpp:570:            for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   ! some work, but not complicated
   MacProj.cpp:961:    for (FillPatchIterator S_fpi(ns_level,vel_visc_terms,Godunov::hypgrow(),
   MacProj.cpp:1144:    for (MFIter Syncmfi(Sync); Syncmfi.isValid(); ++Syncmfi)
   MacProj.cpp:1217:    for (MFIter U_edge0mfi(U_edge[0]); U_edge0mfi.isValid(); ++U_edge0mfi)

   ! Some work here, but not complicated
   Projection.cpp:1771:    for (MFIter mfmfi(mf); mfmfi.isValid(); ++mfmfi) 
   Projection.cpp:1804:       for (MFIter mfmfi(mf); mfmfi.isValid(); ++mfmfi) 
   Projection.cpp:1843:    for (MFIter mfmfi(mf); mfmfi.isValid(); ++mfmfi) 


B. Loops requiring thought
   !!SyncInterp functions - coarse-fine interaction. Got these wrong earlier
     // This is very similar to InterpFromCoarseLevel() in
     // amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp, which does not use tiling
     ! see more comments in file
   NavierStokesBase.cpp:3196:    for (MFIter mfi(cdataMF); mfi.isValid(); ++mfi)
   NavierStokesBase.cpp:3313:        for (MFIter mfi(crse_phi); mfi.isValid(); ++mfi)
   NavierStokesBase.cpp:3328:        for (MFIter mfi(crse_phi); mfi.isValid(); ++mfi)

   ! Needs some thought because takes cc data and makes edge centered data
   NavierStokes.cpp:2154:        for (MFIter ecMfi(*viscosity[dir]); ecMfi.isValid(); ++ecMfi)
   NavierStokes.cpp:2195:        for (MFIter ecMfi(*diffusivity[dir]); ecMfi.isValid(); ++ecMfi)


C. Needs new problem setup to test any changes
   ! Need anelastic problem to test.  straight forward
   MacProj.cpp:1533:    for (MFIter mfi(*area); mfi.isValid(); ++mfi)
   Projection.cpp:1881:    for (MFIter mfmfi(mf); mfmfi.isValid(); ++mfmfi) 
   Projection.cpp:1917:    for (MFIter mfmfi(mf); mfmfi.isValid(); ++mfmfi) 

   ! Would need inflow problem to test next 3
   ! This first one does a setVal on regular box, and then work on coarse/fine overlap (so smaller boxes), and then (potentially) thin boxes. Probably should tile.
   Projection.cpp:2848:  for (MFIter mfi(msk); mfi.isValid(); ++mfi) { 
   ! 7/18 This one needs OMP but no tiling b/c it already operates on a thin box 
   Projection.cpp:2982:	for (MFIter mfi(*vel[lev]); mfi.isValid(); ++mfi) { //This one needs inflowCorner
   ! 7/18 This one is good to go. Already OMP'ed and good without tiling b/c it already operates on a thin box 
   Projection.cpp:2928:	for (MFIter mfi(msk); mfi.isValid(); ++mfi) 


Loops that might not need tiling right now or potentially at all

D. Coarse-fine box intersections.
   ! 7/23 CEG Added OMP, but no tiling.
   Castro, Nyx do not tile similar loops.
   !! A fine box isn't guaranteed to fit inside exactly 1 crse box, so tiling could
   !! create unneccessarily small boxes in the intersection set we have to loop over
   (Castro does OMP. see Castro.cpp:3425, radiation/MGFLD.cpp:740, Radiation.cpp)
   MacProj.cpp:535:    for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   MacProj.cpp:735:    for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   NavierStokes.cpp:1719:    for (MFIter Vsyncmfi(Vsync); Vsyncmfi.isValid(); ++Vsyncmfi)


E. Loops operating on bondary regions. Need tiling?
   ! Just doing ghost cells?  Tiling needed?
   ! 7/23 CEG OMPed loop
   MacProj.cpp:1387:            for (MFIter mfi(*mac_phi); mfi.isValid(); ++mfi)
   !! Tile? already OMPed
   !! call to HOEXTRAPTOCC which fills outside of domain cells according to comments.
   NavierStokesBase.cpp:1154:        for (MFIter mfi(u_mac[n]); mfi.isValid(); ++mfi)
   ! 7/25 CEG OMPed loop
   ! Narrow boundary box, i think. 
   Projection.cpp:2405:        for (MFIter mfi(phi_fine_strip_mf); mfi.isValid(); ++mfi) {
   ! 7/25 CEG OMPed loop
   ! Specific to outflow. Narrow boundary box
   Projection.cpp:2116:            for (MFIter mfi(phi_crse_strip); mfi.isValid(); ++mfi)
   ! setPhysBoundaryValues, for 2nd pass?
   Projection.cpp:264:    for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   Projection.cpp:941:            for (MFIter mfi(S_new); mfi.isValid(); ++mfi) {
   Projection.cpp:974:        for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   Projection.cpp:999:            for (MFIter mfi(divu_new); mfi.isValid(); ++mfi)
   Projection.cpp:1131:        for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   Projection.cpp:1285:            for (MFIter mfi(divu_new); mfi.isValid(); ++mfi)
   Projection.cpp:1344:        for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   ! Just looking at boundary. Tiling needed?
   ! Do later, in function test_umac_periodic(), which by default is only for DEBUG
   MacProj.cpp:1455:            for (MFIter mfi(u_mac[dim]); mfi.isValid(); ++mfi)


F. Not enough work to be worth tiling?
   ! Think this operates on a thin box, not much work. Worth tiling? 
   SyncRegister.cpp:79:            for (MFIter mfi(rhs); mfi.isValid(); ++mfi)
   ! Operates on intersection of boxes. Not much actual work here (setVal). Worth tiling?
   SyncRegister.cpp:259:    for (MFIter mfi(Sync_resid_fine); mfi.isValid(); ++mfi)
   !In SyncRegister::FineAdd - coarse-fine interaction, but I think it's a narrow box. Tile?
   SyncRegister.cpp:313:	    for (MFIter mfi(Sync_resid_fine); mfi.isValid(); ++mfi)


G. Not necessary for a first pass with tiling?
   ! Initialization, not for first pass. easy updates i think
   NavierStokes.cpp:87:    for (MFIter snewmfi(S_new); snewmfi.isValid(); ++snewmfi)
   NavierStokes.cpp:173:            for (MFIter mfi(tmp); mfi.isValid(); ++mfi)
   ! InitialVortProj - easy updates here
   Projection.cpp:1989:        for (MFIter mfi(*rhnd[lev]); mfi.isValid(); ++mfi)
   Projection.cpp:2047:            for (MFIter mfi(*vel[lev]); mfi.isValid(); ++mfi)
   ! Maxval - looks like analysis stuff, can do later?
   NavierStokes.cpp:884:    for (MFIter mfi(*mf); mfi.isValid(); ++mfi)
   !!! For analysis stuff that should get moved out of NavierStokesBase? -- I think I have these changes stashed in git
   NavierStokesBase.cpp:3778:    for (MFIter mfi(*mf); mfi.isValid(); ++mfi)
   NavierStokesBase.cpp:3929:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);
   NavierStokesBase.cpp:3951:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);
   NavierStokesBase.cpp:3995:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);
   NavierStokesBase.cpp:4017:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);











