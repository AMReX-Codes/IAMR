
Done for first pass, but for later:
A. NavierStokesBase
   - Sync funcitons
   - Get sums update from cache.

B. GODUNOV
   - I did not update BDS. I don't think it will work with my tiling updates.

My questions:
   1. Need a regression test with divu and refinement at outflow boundary? - easy fix
      is to add outflow to the hotspot test in 2d or 3d. Maybe switch poiseuille to
      require no refinement at outflow boundary?


These work but could perhaps be done a cleaner way, see comments in code
   MacOperator.cpp:106:    for (MFIter rhomfi(rho); rhomfi.isValid(); ++rhomfi)
   MacOperator.cpp:309:    for (MFIter Phimfi(Phi); Phimfi.isValid(); ++Phimfi)
Has OMP and tiling, but perhaps should test if tiling is a win
   ! Zeros area of coarse grid covered by fine (operates on intersection of coarse
   ! and fine grids).  Depending on box size,
   ! tilebox size, and layout of grids, could already be operating on small enough
   ! regions without adding tiling. 
   MacProj.cpp:537:            for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   ! LMC closed chamber version of above.  Also used if subtract_avg == 1
   MacProj.cpp:740:            for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
Is fix_mac_sync_rhs really still needed?
   ! No regtest in IAMR hits this area of code.  More checks needed here?
   ! Get differences of O(-14) by step 2, and same at step 50 (inputs.2d.periodic_shear_layer)
   ! no difference with tiling off
   ! size of fix is O(-15)
   ! use mac.fix_mac_sync_rhs = 1
   MacProj.cpp:571:            for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   ! version for LMC flame in a box, tested with inputs.2d-regt, no diffs at 10 steps (not sure size of the fix)
   MacProj.cpp:779:            for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)	


MFIters not tiled (8/20/18): 

   ! Do later, in function test_umac_periodic(), which by default is only for DEBUG
   MacProj.cpp:1455:            for (MFIter mfi(u_mac[dim]); mfi.isValid(); ++mfi)

A. Loops requiring thought
   !!SyncInterp functions - coarse-fine interaction. Got these wrong earlier
     // This is very similar to InterpFromCoarseLevel() in
     // amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp, which does not use tiling
     ! see more comments in file
   NavierStokesBase.cpp:3196:    for (MFIter mfi(cdataMF); mfi.isValid(); ++mfi)
   NavierStokesBase.cpp:3313:        for (MFIter mfi(crse_phi); mfi.isValid(); ++mfi)
   NavierStokesBase.cpp:3328:        for (MFIter mfi(crse_phi); mfi.isValid(); ++mfi)

   ! Needs some thought because takes cc data and makes edge centered data
   NavierStokes.cpp:2154:        for (MFIter ecMfi(*viscosity[dir]); ecMfi.isValid(); ++ecMfi)
   NavierStokes.cpp:2195:        for (MFIter ecMfi(*diffusivity[dir]); ecMfi.isValid(); ++ecMfi)


B. To be removed:
   ! 7/27 ASA says remove anelastic entirely - best way to do this?
   ! Need anelastic problem to test.  straight forward
   MacProj.cpp:1533:    for (MFIter mfi(*area); mfi.isValid(); ++mfi)
   Projection.cpp:1881:    for (MFIter mfmfi(mf); mfmfi.isValid(); ++mfmfi) 
   Projection.cpp:1917:    for (MFIter mfmfi(mf); mfmfi.isValid(); ++mfmfi) 

C. Needs new problem setup to test any changes
   ! Would need inflow problem to test next 3
   ! This first one does a setVal on regular box, and then work on coarse/fine overlap
   ! (so smaller boxes), and then (potentially) thin boxes. Probably should tile.
   Projection.cpp:2848:  for (MFIter mfi(msk); mfi.isValid(); ++mfi) { 
   ! 7/18 This one needs OMP but no tiling b/c it already operates on a thin box 
   Projection.cpp:2982:	for (MFIter mfi(*vel[lev]); mfi.isValid(); ++mfi) { //This one needs inflowCorner
   ! 7/18 This one is good to go. Already OMP'ed and good without tiling b/c it already
   ! operates on a thin box 
   Projection.cpp:2928:	for (MFIter mfi(msk); mfi.isValid(); ++mfi) 


Loops not getting tiled:

D. Coarse-fine box intersections.
   ! 7/23 CEG Added OMP, but no tiling.
   Castro, Nyx do not tile similar loops.
   ! Depending on box size, tilebox size, and layout of grids, could already be
   ! operating on small enough regions without adding tiling.
   ! Test if tiling a likely win?
   (Castro does OMP. see Castro.cpp:3425, radiation/MGFLD.cpp:740, Radiation.cpp)
   MacProj.cpp:535:    for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   MacProj.cpp:735:    for (MFIter Rhsmfi(Rhs); Rhsmfi.isValid(); ++Rhsmfi)
   NavierStokes.cpp:1719:    for (MFIter Vsyncmfi(Vsync); Vsyncmfi.isValid(); ++Vsyncmfi)
   ! Operates on intersection of boxes. Added OMP. Worth tiling?
   SyncRegister.cpp:259:    for (MFIter mfi(Sync_resid_fine); mfi.isValid(); ++mfi)


E. Loops operating on thin bondary regions. 
   ! Just doing ghost cells?  
   ! 7/23 OMP added
   MacProj.cpp:1387:            for (MFIter mfi(*mac_phi); mfi.isValid(); ++mfi)
   !! Tile? already has OMP
   !! call to HOEXTRAPTOCC which fills outside of domain cells according to comments.
   NavierStokesBase.cpp:1154:        for (MFIter mfi(u_mac[n]); mfi.isValid(); ++mfi)
   ! 7/25 OMP added
   ! Narrow boundary box, i think. 
   Projection.cpp:2405:        for (MFIter mfi(phi_fine_strip_mf); mfi.isValid(); ++mfi) {
   ! 7/25 OMP added
   ! Specific to outflow. Narrow boundary box
   Projection.cpp:2116:            for (MFIter mfi(phi_crse_strip); mfi.isValid(); ++mfi)
   ! setPhysBoundaryValues
   Projection.cpp:264:    for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   Projection.cpp:941:            for (MFIter mfi(S_new); mfi.isValid(); ++mfi) {
   Projection.cpp:974:        for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   Projection.cpp:999:            for (MFIter mfi(divu_new); mfi.isValid(); ++mfi)
   Projection.cpp:1131:        for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   Projection.cpp:1285:            for (MFIter mfi(divu_new); mfi.isValid(); ++mfi)
   Projection.cpp:1344:        for (MFIter mfi(S_new); mfi.isValid(); ++mfi)
   ! This operates on a thin box (1 cell wide in one dim)
   SyncRegister.cpp:79:            for (MFIter mfi(rhs); mfi.isValid(); ++mfi)
   !In SyncRegister::FineAdd - coarse-fine interaction.
   ! Works on a narrow box (1 cell wide in one dim).
   SyncRegister.cpp:313:	    for (MFIter mfi(Sync_resid_fine); mfi.isValid(); ++mfi)


G. Not necessary for a first pass with tiling?
   ! Init velocity from plotfile
   NavierStokes.cpp:175:            for (MFIter mfi(tmp); mfi.isValid(); ++mfi)
   ! Maxval - looks like analysis stuff, can do later?
   NavierStokes.cpp:884:    for (MFIter mfi(*mf); mfi.isValid(); ++mfi)
   !!! For analysis stuff that should get moved out of NavierStokesBase? -- I think I have these changes stashed in git
   NavierStokesBase.cpp:3778:    for (MFIter mfi(*mf); mfi.isValid(); ++mfi)
   NavierStokesBase.cpp:3929:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);
   NavierStokesBase.cpp:3951:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);
   NavierStokesBase.cpp:3995:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);
   NavierStokesBase.cpp:4017:    for (MFIter turbMfi(*turbMF), presMfi(*presMF);








